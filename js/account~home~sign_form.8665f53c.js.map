{"version":3,"sources":["webpack:///../../../src/components/VProgressCircular/index.ts","webpack:///../../../src/components/VGrid/VSpacer.ts","webpack:///../../../src/mixins/registrable/index.ts","webpack:///../../../src/components/VProgressCircular/VProgressCircular.ts","webpack:///../../../src/mixins/groupable/index.ts","webpack:///../../../src/components/VBtn/VBtn.ts","webpack:///../../../src/mixins/sizeable/index.ts","webpack:///./node_modules/core-js/modules/es.string.small.js","webpack:///../../../src/mixins/toggleable/index.ts"],"names":["generateWarning","child","defaultImpl","register","unregister","parent","name","inject","default","self","provide","this","directives","intersect","props","button","indeterminate","rotate","type","Number","size","width","value","data","radius","isVisible","computed","calculatedSize","circumference","Math","classes","normalizedValue","parseFloat","strokeDashArray","strokeDashOffset","strokeWidth","styles","height","svgStyles","transform","viewBoxSize","methods","genCircle","$createElement","class","attrs","fill","cx","cy","r","offset","genSvg","children","style","xmlns","viewBox","genInfo","staticClass","$slots","onObserve","render","h","setTextColor","role","undefined","on","$listeners","activeClass","namespace","disabled","Boolean","isActive","groupClasses","created","beforeDestroy","toggle","factory","baseMixins","btnToggle","block","depressed","fab","icon","loading","outlined","plain","retainFocusOnClick","rounded","tag","text","tile","proxyClass","sizeableClasses","computedElevation","computedRipple","defaultRipple","circle","hasBg","isElevated","elevation","isRound","measurableStyles","breakingProps","original","replacement","click","e","$el","genContent","genLoader","loader","setColor","includes","JSON","large","small","xLarge","xSmall","medium","$","createHTML","forcedStringHTMLMethod","target","proto","forced","prop","event","model","required","watch","$emit","Toggleable"],"mappings":"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","file":"js/account~home~sign_form.8665f53c.js","sourcesContent":["import VProgressCircular from './VProgressCircular'\n\nexport { VProgressCircular }\nexport default VProgressCircular\n","import './_grid.sass'\nimport { createSimpleFunctional } from '../../util/helpers'\n\nexport default createSimpleFunctional('spacer', 'div', 'v-spacer')\n","import Vue from 'vue'\nimport { VueConstructor } from 'vue/types/vue'\nimport { consoleWarn } from '../../util/console'\n\nfunction generateWarning (child: string, parent: string) {\n  return () => consoleWarn(`The ${child} component must be used inside a ${parent}`)\n}\n\nexport type Registrable<T extends string, C extends VueConstructor | null = null> = VueConstructor<Vue & {\n  [K in T]: C extends VueConstructor ? InstanceType<C> : {\n    register (...props: any[]): void\n    unregister (self: any): void\n  }\n}>\n\nexport function inject<\n  T extends string, C extends VueConstructor | null = null\n> (namespace: T, child?: string, parent?: string): Registrable<T, C> {\n  const defaultImpl = child && parent ? {\n    register: generateWarning(child, parent),\n    unregister: generateWarning(child, parent),\n  } : null\n\n  return Vue.extend({\n    name: 'registrable-inject',\n\n    inject: {\n      [namespace]: {\n        default: defaultImpl,\n      },\n    },\n  })\n}\n\nexport function provide (namespace: string, self = false) {\n  return Vue.extend({\n    name: 'registrable-provide',\n\n    provide (): object {\n      return {\n        [namespace]: self ? this : {\n          register: (this as any).register,\n          unregister: (this as any).unregister,\n        },\n      }\n    },\n  })\n}\n","// Styles\nimport './VProgressCircular.sass'\n\n// Directives\nimport intersect from '../../directives/intersect'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeChildren } from 'vue'\n\n/* @vue/component */\nexport default Colorable.extend({\n  name: 'v-progress-circular',\n\n  directives: { intersect },\n\n  props: {\n    button: Boolean,\n    indeterminate: Boolean,\n    rotate: {\n      type: [Number, String],\n      default: 0,\n    },\n    size: {\n      type: [Number, String],\n      default: 32,\n    },\n    width: {\n      type: [Number, String],\n      default: 4,\n    },\n    value: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    radius: 20,\n    isVisible: true,\n  }),\n\n  computed: {\n    calculatedSize (): number {\n      return Number(this.size) + (this.button ? 8 : 0)\n    },\n\n    circumference (): number {\n      return 2 * Math.PI * this.radius\n    },\n\n    classes (): object {\n      return {\n        'v-progress-circular--visible': this.isVisible,\n        'v-progress-circular--indeterminate': this.indeterminate,\n        'v-progress-circular--button': this.button,\n      }\n    },\n\n    normalizedValue (): number {\n      if (this.value < 0) {\n        return 0\n      }\n\n      if (this.value > 100) {\n        return 100\n      }\n\n      return parseFloat(this.value)\n    },\n\n    strokeDashArray (): number {\n      return Math.round(this.circumference * 1000) / 1000\n    },\n\n    strokeDashOffset (): string {\n      return ((100 - this.normalizedValue) / 100) * this.circumference + 'px'\n    },\n\n    strokeWidth (): number {\n      return Number(this.width) / +this.size * this.viewBoxSize * 2\n    },\n\n    styles (): object {\n      return {\n        height: convertToUnit(this.calculatedSize),\n        width: convertToUnit(this.calculatedSize),\n      }\n    },\n\n    svgStyles (): object {\n      return {\n        transform: `rotate(${Number(this.rotate)}deg)`,\n      }\n    },\n\n    viewBoxSize (): number {\n      return this.radius / (1 - Number(this.width) / +this.size)\n    },\n  },\n\n  methods: {\n    genCircle (name: string, offset: string | number): VNode {\n      return this.$createElement('circle', {\n        class: `v-progress-circular__${name}`,\n        attrs: {\n          fill: 'transparent',\n          cx: 2 * this.viewBoxSize,\n          cy: 2 * this.viewBoxSize,\n          r: this.radius,\n          'stroke-width': this.strokeWidth,\n          'stroke-dasharray': this.strokeDashArray,\n          'stroke-dashoffset': offset,\n        },\n      })\n    },\n    genSvg (): VNode {\n      const children = [\n        this.indeterminate || this.genCircle('underlay', 0),\n        this.genCircle('overlay', this.strokeDashOffset),\n      ] as VNodeChildren\n\n      return this.$createElement('svg', {\n        style: this.svgStyles,\n        attrs: {\n          xmlns: 'http://www.w3.org/2000/svg',\n          viewBox: `${this.viewBoxSize} ${this.viewBoxSize} ${2 * this.viewBoxSize} ${2 * this.viewBoxSize}`,\n        },\n      }, children)\n    },\n    genInfo (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-progress-circular__info',\n      }, this.$slots.default)\n    },\n    onObserve (entries: IntersectionObserverEntry[], observer: IntersectionObserver, isIntersecting: boolean) {\n      this.isVisible = isIntersecting\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.color, {\n      staticClass: 'v-progress-circular',\n      attrs: {\n        role: 'progressbar',\n        'aria-valuemin': 0,\n        'aria-valuemax': 100,\n        'aria-valuenow': this.indeterminate ? undefined : this.normalizedValue,\n      },\n      class: this.classes,\n      directives: [{\n        name: 'intersect',\n        value: this.onObserve,\n      }],\n      style: this.styles,\n      on: this.$listeners,\n    }), [\n      this.genSvg(),\n      this.genInfo(),\n    ])\n  },\n})\n","// Mixins\nimport { Registrable, inject as RegistrableInject } from '../registrable'\n\n// Utilities\nimport { ExtractVue } from '../../util/mixins'\nimport { VueConstructor } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nexport type Groupable<T extends string, C extends VueConstructor | null = null> = VueConstructor<ExtractVue<Registrable<T, C>> & {\n  activeClass: string\n  isActive: boolean\n  disabled: boolean\n  groupClasses: object\n  toggle (): void\n}>\n\nexport function factory<T extends string, C extends VueConstructor | null = null> (\n  namespace: T,\n  child?: string,\n  parent?: string\n): Groupable<T, C> {\n  return RegistrableInject<T, C>(namespace, child, parent).extend({\n    name: 'groupable',\n\n    props: {\n      activeClass: {\n        type: String,\n        default (): string | undefined {\n          if (!this[namespace]) return undefined\n\n          return this[namespace].activeClass\n        },\n      } as any as PropValidator<string>,\n      disabled: Boolean,\n    },\n\n    data () {\n      return {\n        isActive: false,\n      }\n    },\n\n    computed: {\n      groupClasses (): object {\n        if (!this.activeClass) return {}\n\n        return {\n          [this.activeClass]: this.isActive,\n        }\n      },\n    },\n\n    created () {\n      this[namespace] && (this[namespace] as any).register(this)\n    },\n\n    beforeDestroy () {\n      this[namespace] && (this[namespace] as any).unregister(this)\n    },\n\n    methods: {\n      toggle () {\n        this.$emit('change')\n      },\n    },\n  })\n}\n\n/* eslint-disable-next-line @typescript-eslint/no-redeclare */\nconst Groupable = factory('itemGroup')\n\nexport default Groupable\n","// Styles\nimport './VBtn.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Components\nimport VProgressCircular from '../VProgressCircular'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Elevatable from '../../mixins/elevatable'\nimport Positionable from '../../mixins/positionable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { breaking } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator, PropType } from 'vue/types/options'\nimport { RippleOptions } from '../../directives/ripple'\n\nconst baseMixins = mixins(\n  VSheet,\n  Routable,\n  Positionable,\n  Sizeable,\n  GroupableFactory('btnToggle'),\n  ToggleableFactory('inputValue')\n  /* @vue/component */\n)\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-btn',\n\n  props: {\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.btnToggle) return ''\n\n        return this.btnToggle.activeClass\n      },\n    } as any as PropValidator<string>,\n    block: Boolean,\n    depressed: Boolean,\n    fab: Boolean,\n    icon: Boolean,\n    loading: Boolean,\n    outlined: Boolean,\n    plain: Boolean,\n    retainFocusOnClick: Boolean,\n    rounded: Boolean,\n    tag: {\n      type: String,\n      default: 'button',\n    },\n    text: Boolean,\n    tile: Boolean,\n    type: {\n      type: String,\n      default: 'button',\n    },\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-btn--active',\n  }),\n\n  computed: {\n    classes (): any {\n      return {\n        'v-btn': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-btn--absolute': this.absolute,\n        'v-btn--block': this.block,\n        'v-btn--bottom': this.bottom,\n        'v-btn--disabled': this.disabled,\n        'v-btn--is-elevated': this.isElevated,\n        'v-btn--fab': this.fab,\n        'v-btn--fixed': this.fixed,\n        'v-btn--has-bg': this.hasBg,\n        'v-btn--icon': this.icon,\n        'v-btn--left': this.left,\n        'v-btn--loading': this.loading,\n        'v-btn--outlined': this.outlined,\n        'v-btn--plain': this.plain,\n        'v-btn--right': this.right,\n        'v-btn--round': this.isRound,\n        'v-btn--rounded': this.rounded,\n        'v-btn--router': this.to,\n        'v-btn--text': this.text,\n        'v-btn--tile': this.tile,\n        'v-btn--top': this.top,\n        ...this.themeClasses,\n        ...this.groupClasses,\n        ...this.elevationClasses,\n        ...this.sizeableClasses,\n      }\n    },\n    computedElevation (): string | number | undefined {\n      if (this.disabled) return undefined\n\n      return Elevatable.options.computed.computedElevation.call(this)\n    },\n    computedRipple (): RippleOptions | boolean {\n      const defaultRipple = this.icon || this.fab ? { circle: true } : true\n      if (this.disabled) return false\n      else return this.ripple ?? defaultRipple\n    },\n    hasBg (): boolean {\n      return !this.text && !this.plain && !this.outlined && !this.icon\n    },\n    isElevated (): boolean {\n      return Boolean(\n        !this.icon &&\n        !this.text &&\n        !this.outlined &&\n        !this.depressed &&\n        !this.disabled &&\n        !this.plain &&\n        (this.elevation == null || Number(this.elevation) > 0)\n      )\n    },\n    isRound (): boolean {\n      return Boolean(\n        this.icon ||\n        this.fab\n      )\n    },\n    styles (): object {\n      return {\n        ...this.measurableStyles,\n      }\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['flat', 'text'],\n      ['outline', 'outlined'],\n      ['round', 'rounded'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      // TODO: Remove this in v3\n      !this.retainFocusOnClick && !this.fab && e.detail && this.$el.blur()\n      this.$emit('click', e)\n\n      this.btnToggle && this.toggle()\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-btn__content',\n      }, this.$slots.default)\n    },\n    genLoader (): VNode {\n      return this.$createElement('span', {\n        class: 'v-btn__loader',\n      }, this.$slots.loader || [this.$createElement(VProgressCircular, {\n        props: {\n          indeterminate: true,\n          size: 23,\n          width: 2,\n        },\n      })])\n    },\n  },\n\n  render (h): VNode {\n    const children = [\n      this.genContent(),\n      this.loading && this.genLoader(),\n    ]\n    const { tag, data } = this.generateRouteLink()\n    const setColor = this.hasBg\n      ? this.setBackgroundColor\n      : this.setTextColor\n\n    if (tag === 'button') {\n      data.attrs!.type = this.type\n      data.attrs!.disabled = this.disabled\n    }\n    data.attrs!.value = ['string', 'number'].includes(typeof this.value)\n      ? this.value\n      : JSON.stringify(this.value)\n\n    return h(tag, this.disabled ? data : setColor(this.color, data), children)\n  },\n})\n","import Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'sizeable',\n\n  props: {\n    large: Boolean,\n    small: Boolean,\n    xLarge: Boolean,\n    xSmall: Boolean,\n  },\n\n  computed: {\n    medium (): boolean {\n      return Boolean(\n        !this.xSmall &&\n        !this.small &&\n        !this.large &&\n        !this.xLarge\n      )\n    },\n    sizeableClasses (): object {\n      return {\n        'v-size--x-small': this.xSmall,\n        'v-size--small': this.small,\n        'v-size--default': this.medium,\n        'v-size--large': this.large,\n        'v-size--x-large': this.xLarge,\n      }\n    },\n  },\n})\n","'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/string-html-forced');\n\n// `String.prototype.small` method\n// https://tc39.es/ecma262/#sec-string.prototype.small\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('small') }, {\n  small: function small() {\n    return createHTML(this, 'small', '', '');\n  }\n});\n","import Vue, { VueConstructor } from 'vue'\n\nexport type Toggleable<T extends string = 'value'> = VueConstructor<Vue & { isActive: boolean } & Record<T, any>>\n\nexport function factory<T extends string = 'value'> (prop?: T, event?: string): Toggleable<T>\nexport function factory (prop = 'value', event = 'input') {\n  return Vue.extend({\n    name: 'toggleable',\n\n    model: { prop, event },\n\n    props: {\n      [prop]: { required: false },\n    },\n\n    data () {\n      return {\n        isActive: !!this[prop],\n      }\n    },\n\n    watch: {\n      [prop] (val) {\n        this.isActive = !!val\n      },\n      isActive (val) {\n        !!val !== this[prop] && this.$emit(event, val)\n      },\n    },\n  })\n}\n\n/* eslint-disable-next-line @typescript-eslint/no-redeclare */\nconst Toggleable = factory()\n\nexport default Toggleable\n"],"sourceRoot":""}